const { SlashCommandBuilder } = require('@discordjs/builders');
const { MessageActionRow, MessageButton } = require('discord.js');
const fs = require('fs');

module.exports = {
	data: new SlashCommandBuilder()
		.setName('unsub')
		.setDescription('Ø§Ø²Ø§Ù„Ù‡ Ø§Ù„Ø§Ø´ØªØ±Ø§Ùƒ')
		.addUserOption(option => option
			.setName('user')
			.setDescription('Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù…')
			.setRequired(true)
		),
	async execute(interaction, client, Link, Count) {
		const { user } = interaction;
		const Id = user.username;
		if (Id !== '5a7d' && Id !== 'zb43')
			return interaction.reply({ content: 'Ø§Ù†Øª Ù„ÙŠØ³ Ø§Ø¯Ù…Ù† ðŸ”´', ephemeral: true });

		const userId = interaction.options.getUser('user').id;
		const member = await interaction.guild.members.fetch(userId);

		const role = interaction.guild.roles.cache.find((role) => role.name === 'HOSTER');

		if (role) {
			member.roles
				.remove(role)
				.then(async () => {
					const countData = await Count.findOne({ userId });
					if (!countData) {
						interaction.reply({ content: 'Ø§Ù„Ø´Ø®Øµ Ù„ÙŠØ³ Ù…Ø´ØªØ±Ùƒ Ù…Ù† Ù‚Ø¨Ù„.', ephemeral: true });
						return;
					}

					const linkData = await Link.findOne({ userId });

					if (!linkData || !linkData.urls) {
						interaction.reply({ content: 'Ù„Ù… ÙŠØªÙ… Ø§Ù„Ø¹Ø«ÙˆØ± Ø¹Ù„Ù‰ Ø¨ÙŠØ§Ù†Ø§Øª Ø§Ù„Ø±Ø§Ø¨Ø·.', ephemeral: true });
						return;
					}

					const urls = linkData.urls;
					await Count.deleteOne({ userId });
					await Link.deleteOne({ userId });

					interaction.reply(`ØªÙ… Ø¥Ù„ØºØ§Ø¡ Ø§Ù„Ø§Ø´ØªØ±Ø§Ùƒ Ù…Ù† <@${userId}>`);
				})
				.catch((error) => {
					console.log(error);
					interaction.reply({ content: 'Ø­Ø¯Ø« Ø®Ø·Ø£ Ø£Ø«Ù†Ø§Ø¡ Ø¥Ø²Ø§Ù„Ø© Ø§Ù„Ø±ØªØ¨Ø©.', ephemeral: true });
				});
		} else {
			interaction.reply({ content: 'Ù„Ù… ÙŠØªÙ… Ø§Ù„Ø¹Ø«ÙˆØ± Ø¹Ù„Ù‰ Ø§Ù„Ø±ØªØ¨Ø© Ø§Ù„Ù…Ø­Ø¯Ø¯Ø©.', ephemeral: true });
		}
	},
};